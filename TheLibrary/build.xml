<project name="thelibrary" default="test"
    xmlns:ivy="antlib:org.apache.ivy.ant">

    <uptodate targetfile="build/artifacts/thelibrary.jar" property="artifact.uptodate">
        <srcfiles dir= "src" includes="*"/>
    </uptodate>

    <target name="clean">
        <delete dir="build"/>
    </target>

    <target name="build-and-publish-only-if-changed" unless="artifact.uptodate">
        <antcall target="build" />
        <antcall target="ivy-publish-local" />
    </target>

    <target name="build" depends="compile">
        <mkdir dir="build/artifacts"/>
        <jar destfile="build/artifacts/thelibrary.jar" basedir="build/classes">
            <manifest>
                <attribute name="Main-Class" value="se.woop.TheLibrary"/>
            </manifest>
        </jar>
    </target>

    <target name="deploy">
        <echo>TODO: Deploy code here!!! :-)</echo>
    </target>

    <target name="compile">
        <mkdir dir="build/classes"/>
        <javac srcdir="src" destdir="build/classes" includeantruntime="false" />
    </target>

    <target name="ivy-retrieve" description="retrieve dependencies with ivy">
        <!--
            Sync set to true will ensure that any extra files in lib directory is deleted.
            Type set to jar tells ivy to copy only jar artifacts. Source and javadoc artifacts are ignored.
            Some modules like log4j use bundle as type for jar artifact.
        -->
        <ivy:retrieve sync="true" type="jar,bundle" />
    </target>

    <target name="ivy-publish-local" description="Publish this build into repository" depends="build">
        <ivy:resolve/>
        <ivy:publish pubrevision="1.0" status="release" resolver="local" overwrite="true">
            <artifacts pattern="build/artifacts/[artifact].[ext]"/>
        </ivy:publish>
    </target>

    <target name="ivy-publish-public" description="Publish this build into repository">
        <ivy:resolve/>
        <ivy:publish pubrevision="1.0" status="release" resolver="public" overwrite="true">
            <artifacts pattern="build/artifacts/[artifact].[ext]"/>
        </ivy:publish>
    </target>

    <target name="dependency-tree">
        <ivy:dependencytree />
    </target>

</project>
