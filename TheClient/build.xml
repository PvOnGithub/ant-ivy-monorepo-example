<project name="theclient" default="test"
    xmlns:ivy="antlib:org.apache.ivy.ant">

    <uptodate targetfile="build/jar/TheClient.jar" property="artifact.uptodate">
        <srcfiles dir= "src" includes="*"/>
    </uptodate>

    <target name="clean" description="Remove previous build">
        <delete dir="build" />
        <delete dir="lib" />
    </target>

    <target name="compile" description="Compile source" depends="ivy-retrieve">
        <mkdir dir="build/classes"/>
        <javac srcdir="src" destdir="build/classes" includeantruntime="false" />
    </target>

    <target name="build-only-if-changed" unless="artifact.uptodate">
        <antcall target="build" />
    </target>

    <target name="build" description="Builds 'TheClient.jar'" depends="compile">
        <mkdir dir="build/jar"/>
        <jar destfile="build/jar/TheClient.jar" basedir="build/classes">
            <manifest>
                <attribute name="Main-Class" value="se.woop.TheClient"/>
            </manifest>
        </jar>
    </target>

    <target name="ivy-retrieve" description="Retrieve dependencies with ivy">
        <!--
            Sync set to true will ensure that any extra files in lib directory is deleted.
            Type set to jar tells ivy to copy only jar artifacts. Source and javadoc artifacts are ignored.
            Some modules like log4j use bundle as type for jar artifact.
        -->
        <ivy:retrieve sync="true" type="jar,bundle,client,schema" pattern="lib/[artifact]-[type]-[revision].[ext]" />
    </target>

    <target name="ivy-publish-local" description="Publish this build into repository" depends="build">
        <ivy:resolve/>
        <ivy:publish pubrevision="1.0" status="release" resolver="local" overwrite="true">
            <artifacts pattern="build/jar/[artifact].[ext]"/>
        </ivy:publish>
    </target>

</project>
